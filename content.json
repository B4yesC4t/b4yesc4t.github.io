[{"title":"基于机器学习的WAF的探究(一)","date":"2017-05-07T06:23:32.000Z","path":"2017/05/07/基于机器学习的WAF的探究-一/","text":"为什么没有基于机器学习的 WAF机器学习并不是一个新概念, 基于机器学习的 WAF 也并不是最近才兴起. 1998 年 麻省理工就启动了 DARPA 项目, 识图利用算法来取代规则, 构造更为高效智能的 IDS, 其中就包括利用机器学习检测 Web 攻击的课题. 1999 年的 KDD Cup (Data Mining and Knowledge Discovery) 竞赛的题目就是 “Computer network intrusion detection“, 希望利用数据挖掘相关理论来做 IDS. IBM 也投入了大量资金进行机器学习 IDS 的研究. 从这以后的二十年里, 学术界陆陆续续进行了很多利用机器学习构造 IDS 和 WAF 的研究, 也有很多引人注意的成果. 但是, 为什么直到今天, 市场上绝大多数的 IDS 和 WAF 还是基于规则的? 机器学习为什么没有取代规则呢? 甚至在今天, 一些号称基于机器学习的 WAF, 还是需要使用大量的规则, 而且是以规则为主导, 机器学习只进行辅助决策. 这个问题比较复杂, 需要从机器学习本身的特性说起. 机器学习 WAF 的两种方法和各自的应用场景 方法一: 识别具体攻击行为 简单的说, WAF 的功能是判断一条请求是正常还是攻击, 正常就允许通过, 攻击就阻断. 放在机器学习里, 这是一个很直观的 二分类 问题, 即对于一条数据, 判断它是属于正常的类别还是属于攻击. 过去大部分的机器学习 WAF 也都是这么做的. 如果要进行二分类, 就需要获取最容易区分这两类数据的特征. 那如何区分正常请求和攻击? 根据安全经验, 我们之所以能 “一眼就看出” 一些请求是攻击行为, 是因为这些请求中包含一些特定的关键字, SQL 注入中必然会有一些SQL语句, XSS中会有 JS 语句, 尽管这些语句可能会经过多重编码和混淆, 但还是很容易发现. 传统的 WAF 就是直接根据这些关键字来编写规则进行判断, 只要符合规则, 就判定为攻击. 安全专家也是这样判断的. 通过上面的分析可以发现, 人和传统的规则 WAF 都是通过 识别出攻击行为 来进行判断的. 基于分类的机器学习 WAF 也是采用这种思路, 检测出攻击行为, 具体来说就是计算出一条数据属于攻击行为的概率, 概率大于 0.5 (这个阈值可以视情况设定), 就认为是攻击. 目前一些机器学习 WAF 就是基于这种思路, 为了提高识别的准确率, 往往针对每一种攻击建立一个模型, 每个模型只负责判断请求是正常还是某种具体的攻击, 将多个模型结合起来, 再加上规则进行辅助, 这是很多机器学习 WAF 的做法. 这种 WAF 对训练数据没有过多要求, 只需要利用标记好的特定种类的攻击训练就可以了, 适用的范围比较广. 在这种方法里, 利用 N-Grams 提取关键词, 计算 TF-IDF Vector, 然后使用 SVM 或者神经网络, 能够取得不错的效果. 方法二: 识别正常行为 这种方法有一个更常见的名字: 异常检测 . 主要思想是, 对于每一个 Web 应用建模, 让模型计算每种请求出现概率, 由于对于一般的 Web 应用, 正常请求远远多于异常请求, 所以正常请求出现的概率远大于异常. 对于一条请求, 计算得到它出现的概率, 如果概率很小, 就可以认为是异常. 这种方法实质上是借用了自然语言处理中建立 语言模型 的思想, 具体的实现可以采用 One-Class SVM, ISOForest, HMM, 在特定的Web应用上都能取得不错的效果. 为什么不能投入实用以上这两种方法, 在公开的数据集上测试都能取得不错的效果. 在一些安全相关的数据挖掘比赛中, 利用这些方法甚至能得到 0.99 以上的准确率. 但为什么这些没有投入实用? 仔细分析会发现, 对于固定的数据集, 这些算法看上去都能取得很好的效果, 实质上全部都过拟合了. 过度拟合数据集中攻击, 对于数据集中不包含的攻击行为检测效果很差. 出现这个问题, 很大一部分原因是因为数据集有问题. 现今大部分机器学习WAF都是采用的第一种方法. 采用第一种方法需要大量的打标数据进行训练, 而在安全领域, 还没有一个像 ImageNet 那样丰富而庞大的数据集. 一方面数据量不够大, 包含的攻击行为种类太少; 另一方面, 标记的质量太低, 很多标记都是根据传统的 WAF 的检测结果得来的. 这样的数据拿来训练, 算法设计得再好, 最终效果也只能和传统的 WAF 接近, 而由于数据量的问题, 即使测试效果再好, 在实际使用中, 会遇到大量在训练集中完全没有出现过的数据, 这些因素导致用算法甚至远远不如用规则效果好. 总结来说, 在比赛和测试时, 训练集和测试集的分布大致是一样的, 但在实际使用时, 预测集和训练集的分布有很大不同, 所以很多算法没办法投入实用. 机器学习WAF的未来算法一定会淘汰传统的规则. 但是目前还不能没有规则, 增大数据集, 利用异常检测, 将算法和规则结合, 这或许是现在唯一可行的方法.","tags":[{"name":"WAF","slug":"WAF","permalink":"http://yoursite.com/tags/WAF/"},{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"文本分类","slug":"文本分类","permalink":"http://yoursite.com/tags/文本分类/"},{"name":"深度学习","slug":"深度学习","permalink":"http://yoursite.com/tags/深度学习/"},{"name":"入侵检测","slug":"入侵检测","permalink":"http://yoursite.com/tags/入侵检测/"}]},{"title":"机器学习的数学基础: 数值优化(一)","date":"2017-04-27T10:46:16.000Z","path":"2017/04/27/机器学习的数学基础-数值优化-一/","text":"机器学习需要较多的数学基础, 数值优化 和 统计 是机器学习中应用最多的两门数学. 大部分的机器学习问题, 最终都是一个数值优化问题. 谈到机器学习, 就没办法不谈数值优化. 机器学习中最常用的 梯度下降 , 牛顿法 , 拟牛顿法 这些都属于数值优化. 本文从基本概念开始, 简单的介绍数值优化问题. 关于本文 内容概括: 数值优化的基本概念 阅读时间: 1 到 3 分钟 面向人群: 机器学习的初学者 什么是优化问题通俗地来讲, 优化问题就是, 求函数 $f(x)$ 在取得最小值 (或最大值) 时的 $x$ . 有时候, $x$ 的取值范围会有一定的限制, 这种情况叫做 约束优化 ; 如果 $x$ 的取值没有限制, 那么就叫做 无约束优化 . 优化问题表示成标准形式如下: \\begin{eqnarray*} minimize \\quad &&f(x) \\tag{1} \\\\ subject \\; to \\quad &&C_i(x)=0 \\, , i \\in E \\tag{2} \\\\ &&C_j(x) \\geq 0 \\, , i \\in I\\tag{3} \\end{eqnarray*}其中 $x$ 为 优化变量 , $(1)$ 为 目标函数 , $(2)$ 为 等式约束 , $(3)$ 为 不等式约束 . 当 $f(x)$ 有最小值时, $x=x^*$, 称 $x^*$ 为 该优化问题的 解 . 其实我们很早就接触过优化问题, 当 $f(x)​$ 为抛物线时, 求抛物线的最低点的 $x​$ 值, 就是高中数学里经常遇到的一个问题. 但是实际问题里的 $f(x)​$ 的形式比这个复杂得多, 所以需要专门的方法来求解它取最小值时的 $x​$ . 机器学习为什么需要数值优化在机器学习问题特别是监督学习问题中, 假设训练数据为 $(x_i, y_i), 1 \\leq i \\leq N$ (例如 $x$ 为房子大小, $y$ 为房价, 希望建立模型, 根据房子大小预测对应的房价) . 模型为 $f(x;\\theta)$ , $\\theta$ 为模型的参数, $y’$为模型的预测值, 即 $y’=f(x;\\theta)$ .我们的目标是从训练数据中学习到 “最合适” 的 $\\theta$ , 使 $f(x;\\theta)$ 能够对未知数据做出较好的预测, 也就是希望预测值 $y’$ 与 真实值 $y$ 越接近越好. 为了衡量 $y’$ 与 $y$ 的误差, 定义关于 $y$ 和 $y’$ 的 损失函数 为 $L(y, y’)$ . 损失函数当然越小越好, 所以问题就转化为了一个数值优化问题: minimize \\quad L(y, y') = minimize \\quad L(y, f(x;\\theta)) \\tag{4}对于训练数据, $x$ 和 $y$ 都是已知的, 只有参数 $\\theta$ 未知, 也就是希望求解在预测的误差 (损失函数) 最小时的模型参数 $\\theta$ .知道了模型的参数 $\\theta$ 后, 就能根据 $x$ 来预测 $y$ 值. 考虑到训练数据有多个, 通常把 $(4)式$ 写作以下形式: minimize \\quad \\sum_{i=1}^NL(y_i, f(x_i; \\theta)) \\tag{5}最终机器学习问题转化为了 $(5)$ 式, 这是一个无约束 (没有限制条件) 优化问题. 优化变量是机器学习中模型的参数 $\\theta$ , 目标函数是模型的损失函数 $L$ . 求解出这个优化问题, 就能得到机器学习的模型, 并对未知数据进行预测. 下次继续讲无约束优化的具体方法, 解的性质, 收敛性和其他相关问题.","tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"深度学习","slug":"深度学习","permalink":"http://yoursite.com/tags/深度学习/"},{"name":"数值优化","slug":"数值优化","permalink":"http://yoursite.com/tags/数值优化/"},{"name":"算法","slug":"算法","permalink":"http://yoursite.com/tags/算法/"},{"name":"凸优化","slug":"凸优化","permalink":"http://yoursite.com/tags/凸优化/"}]}]